
// Brute Force Solution 


class Solution {
public:
    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {
              int i=m-1;
        int j = n-1;
         int k = m+n-1;
         while (i>=0 && j>=0)
         {
            if(nums1[i]>nums2[j])
            {
                nums1[k]=nums1[i];
                k--;
                i--;
            }
            else{
 nums1[k]=nums2[j];
 k--;
 j--;
            }
         }
 
                 while(i>=0)
        {
 nums1[k]=nums1[i];
                k--;
                i--;
        }
         
                       while(j>=0)
        {
  nums1[k]=nums2[j];
 k--;
 j--;
        }
    }
    
    
    
    
    
    
    // Most optimised way 
    //Your runtime beats 100.00 % of cpp submissions.
    
    
    class Solution {
public:
    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {
        
 int mnum =  m-1;
 int nnum = n-1;
int ik = m+n-1;
  
   while (nnum >=0)
   {
       if(mnum>=0 &&    nums1[mnum]>nums2[nnum]    )
       {
           nums1[ik]= nums1[mnum];
           mnum--;
           ik--;
       }
       else
       {
           nums1[ik]=nums2[nnum];
           nnum--;
           ik--;
       }
       
   }
   
    }
};
